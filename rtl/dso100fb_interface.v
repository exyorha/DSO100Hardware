`ifndef DSO100FB_INTERFACE
`define DSO100FB_INTERFACE
/*!
 * @interface DSO100FB
 *
 * Видеоконтроллер DSO100FB обладает следующими характеристиками:
 *
 *  * Ведомый интерфейс шины APB3 для доступа к внутренним управляющим
 *    регистрам.
 *  * Ведущий интерфейс шины AHB-Lite для чтения данных из памяти системы.
 *  * Выход прерывания для информирования системы о событиях в контроллере.
 *  * Стандартный выходной параллельный интерфейс, который может быть как
 *    подключен к LCD-панели как непосредственно, так и посредством
 *    блока-преобразователя интерфейсов.
 *  * Выходы для управления питанием LCD-панели и ее подсветки, которые могут
 *    быть использованы для обеспечения ее включения и выключения без артефактов
 *    и без участия программного обеспечения.
 *  * Выход ШИМ для управления яркостью LCD-панели.
 *  * Входной интерфейс для получения дополнительного изображения извне с
 *    возможностью задания произвольного положения и размера этого изображения
 *    на экране, а так же смешения по ключевому цвету и/или альфа-каналу
 *    (функция "картинка в картине").
 *  * Поддержка независимого тактирования шинных интерфейсов, выходного
 *    интерфейса и входного интерфейса дополнительного изображения.
 *  * Встроенные буферы (FIFO) между шинным интерфейсом, интерфейсом
 *    дополнительного изображения и выходным интерфейсом для сокрытия задержек
 *    шин и обеспечения непрерывной выдачи изображения.
 */

/*!
 * Регистр управления. Позволяет управлять функциональными режимами всего
 * контроллера.
 */
`define DSO100FB_REG_CR           4'd0

/*!
 * Регистр состояния прерываний. Флаги, содержащиеся в нем, устанавливаются
 * аппаратурой в случае наступления событий, специфичных для каждого флага. Флаг
 * может быть сброшен записью в него нуля.
 *
 * В случае, если в %DSO100FB_REG_IMR% установлен соответствующий бит, установка
 * флага в этом регистре вызывает выдачу прерывания.
 */
`define DSO100FB_REG_ISR          4'd1

/*!
 * Регистр разрешения прерываний. Определяет, какие флаги %DSO100FB_REG_ISR%
 * выдают прерывание.
 */
`define DSO100FB_REG_IMR          4'd2

/*!
 * Регистр адреса начала буфера кадра.
 */
`define DSO100FB_REG_FB_BASE      4'd3

/*!
 * Регистр адреса конца буфера кадра.
 */
`define DSO100FB_REG_FB_END       4'd4

`define DSO100FB_REG_HTIMING1     4'd5
`define DSO100FB_REG_HTIMING2     4'd6
`define DSO100FB_REG_HTIMING3     4'd7

`define DSO100FB_REG_VTIMING1     4'd8
`define DSO100FB_REG_VTIMING2     4'd9
`define DSO100FB_REG_VTIMING3     4'd10

/*!
 * Регистр параметров интерфейса дисплея.
*/
`define DSO100FB_REG_IFCTRL       4'd11

/*!
 * Запись единицы в этот бит начинает процедуру запуска контроллера. Этот бит
 * всегда читается нулем.
 *
 * Более подробно запуск и остановка контроллера описаны
 * в разделе [Запуск и остановка](#dso100fb_functinal_startstop).
 */
`define DSO100FB_CR_START         0

/*!
 * Запись единицы в этот бит начинает процедуру остановки контроллера. Этот бит
 * всегда читается нулем.
 *
 * Более подробно запуск и остановка контроллера описаны
 * в разделе [Запуск и остановка](#dso100fb_functinal_startstop).
 */
`define DSO100FB_CR_STOP          1

/*!
 * Текущее состояние контроллера: 00 - остановлен, 01 - запускается,
 * 10 - запущен, 11 - останавливается. Это поле доступно только для чтения.
 *
 * Более подробно запуск и остановка контроллера описаны
 * в разделе [Запуск и остановка](#dso100fb_functinal_startstop).
 */
`define DSO100FB_CR_STATE       3:2

/*!
 * Этот флаг устанавливается по завершению процесса запуска контроллера.
 *
 * Более подробно запуск и остановка контроллера описаны в разделе
 * [Запуск и остановка](#dso100fb_functinal_startstop).
 */
`define DSO100FB_ISR_STARTED      0

/*!
 * Этот флаг устанавливается по завершению процесса остановки контроллера.
 *
 * Более подробно запуск и остановка контроллера описаны в разделе
 * [Запуск и остановка](#dso100fb_functinal_startstop).
 */
`define DSO100FB_ISR_STOPPED      1

`define DSO100FB_IMR_STARTEDIE    0
`define DSO100FB_IMR_STOPPEDIE    1

/*!
 * Адрес начала буфера кадра. Указывает на первый пиксель кадра.
 */
`define DSO100FB_FB_BASE_FBBASEADDR           31:0

/*!
 * Адрес конца буфера кадра. Указывает на последний пиксель кадра.
 */
`define DSO100FB_FB_END_FBENDADDR             31:0

/*!
 * Ширина видимой области до начала дополнительного изображения
 * (координата X дополнительного изображения).
 */
`define DSO100FB_HTIMING1_WIDTHBEFOREOVERLAY  11:0

/*!
 * Ширина дополнительного изображения.
 */
`define DSO100FB_HTIMING1_WIDTHOVERLAY        27:16

/*!
 * Ширина видимой области после дополнительного изображения
 */
`define DSO100FB_HTIMING2_WIDTHAFTEROVERLAY   11:0

/*!
 * Число пикселей между концом видимой части изображения и началом импульса
 * строчной синхронизации.
 */
`define DSO100FB_HTIMING2_FRONTPORCH          27:16

/*!
 * Продолжительность импульса строчной синхронизации в пикселях.
 */
`define DSO100FB_HTIMING3_SYNCPULSE           11:0

/*!
 * Число пикселей между концом импульса строчной синхронизации и началом
 * следующей строки.
 */
`define DSO100FB_HTIMING3_BACKPORCH           27:16

/*!
 * Высота видимой области до начала дополнительного изображения
 * (координата Y дополнительного изображения).
 */
`define DSO100FB_VTIMING1_HEIGHTBEFOREOVERLAY  11:0

/*!
 * Высота дополнительного изображения.
 */
`define DSO100FB_VTIMING1_HEIGHTOVERLAY        27:16

/*!
 * Высота видимой области после дополнительного изображения
 */
`define DSO100FB_VTIMING2_HEIGHTAFTEROVERLAY   11:0

/*!
 * Число строк между концом видимой части изображения и началом импульса
 * кадровой синхронизации.
 */
`define DSO100FB_VTIMING2_FRONTPORCH          27:16

/*!
 * Продолжительность импульса кадровой синхронизации в строках.
 */
`define DSO100FB_VTIMING3_SYNCPULSE           11:0

/*!
 * Число строк между концом импульса кадровой синхронизации и началом
 * следующего кадра.
 */
`define DSO100FB_VTIMING3_BACKPORCH           27:16

/*!
 * Полярность сигнала разрешения данных: 0 - активный высокий,
 * 1 - активный низкий.
 */
`define DSO100FB_IFCTRL_DE_POL  0

/*!
 * Полярность сигнала строчной синхронизации: 0 - активный высокий,
 * 1 - активный низкий.
 */
`define DSO100FB_IFCTRL_HSYNC_POL  1

/*!
 * Полярность сигнала кадровой синхронизации: 0 - активный высокий,
 * 1 - активный низкий.
 */
`define DSO100FB_IFCTRL_VSYNC_POL  2

`endif
